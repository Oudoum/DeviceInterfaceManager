<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:idd="clr-namespace:Avalonia.Xaml.Interactions.DragAndDrop;assembly=Avalonia.Xaml.Interactions.DragAndDrop"
             xmlns:b="using:DeviceInterfaceManager.Behaviors"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:converters="clr-namespace:DeviceInterfaceManager.Converters"
             xmlns:vm="clr-namespace:DeviceInterfaceManager.ViewModels"
             xmlns:m="clr-namespace:DeviceInterfaceManager.Models"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="800"
             x:Class="DeviceInterfaceManager.Views.ProfileCreatorView"
             x:DataType="vm:ProfileCreatorViewModel">

    <Design.DataContext>
        <vm:ProfileCreatorViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:NullableKeyValuePairConverter x:Key="NullableKeyValuePairConverter" />
        <converters:PmdgEventToStringConverter x:Key="PmdgEventToStringConverter" />
        <converters:LengthToBooleanConverter x:Key="LengthToBooleanConverter" />
        <b:InputCreatorDataGridDropHandler x:Key="InputCreatorDataGridDropHandler" />
        <b:OutputCreatorDataGridDropHandler x:Key="OutputCreatorDataGridDropHandler" />
    </UserControl.Resources>

    <Grid RowDefinitions="Auto,*">

        <StackPanel Grid.Row="0">

            <ui:CommandBar>
                <ui:CommandBar.PrimaryCommands>

                    <ui:CommandBarButton Label="Change" Command="{Binding ChangeDeviceCommand }">
                        <ui:CommandBarButton.CommandParameter>
                            <sys:Boolean>true</sys:Boolean>
                        </ui:CommandBarButton.CommandParameter>
                        <ui:CommandBarButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource Devices}" />
                        </ui:CommandBarButton.IconSource>
                    </ui:CommandBarButton>

                    <ui:CommandBarButton Label="Load" Command="{Binding LoadProfileCommand}">
                        <ui:CommandBarButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource FolderOpenOutline}" />
                        </ui:CommandBarButton.IconSource>
                    </ui:CommandBarButton>

                    <ui:CommandBarButton Label="Save" Command="{Binding SaveProfileCommand}">
                        <ui:CommandBarButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource ContentSaveOutline}" />
                        </ui:CommandBarButton.IconSource>
                    </ui:CommandBarButton>

                    <ui:CommandBarButton Label="Save as" Command="{Binding SaveProfileAsCommand}">
                        <ui:CommandBarButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource ContentSaveEditOutline}" />
                        </ui:CommandBarButton.IconSource>
                    </ui:CommandBarButton>

                    <ui:CommandBarButton Label="Rename" Command="{Binding ChangeProfileNameCommand}">
                        <ui:CommandBarButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource RenameOutline}" />
                        </ui:CommandBarButton.IconSource>
                    </ui:CommandBarButton>

                    <ui:CommandBarButton Label="Sort"
                                         Command="{Binding SortInputOutputCommand}"
                                         Classes.null="{Binding IsSortedAscending, Converter={x:Static ObjectConverters.IsNull}}"
                                         Classes.ascending="{Binding IsSortedAscending}"
                                         Classes.descending="{Binding !IsSortedAscending}">
                        <ui:CommandBarButton.Styles>
                            <Style Selector="ui|CommandBarButton.ascending">
                                <Setter Property="IconSource">
                                    <ui:PathIconSource Data="{StaticResource SortAlphabeticalAscending}" />
                                </Setter>
                            </Style>
                            <Style Selector="ui|CommandBarButton.descending">
                                <Setter Property="IconSource">
                                    <ui:PathIconSource Data="{StaticResource SortAlphabeticalDescending}" />
                                </Setter>
                            </Style>
                            <Style Selector="ui|CommandBarButton.null">
                                <Setter Property="IconSource">
                                    <ui:PathIconSource Data="{StaticResource SortAlphabetical}" />
                                </Setter>
                            </Style>
                        </ui:CommandBarButton.Styles>
                    </ui:CommandBarButton>

                    <ui:CommandBarButton Label="Clear" Command="{Binding ClearProfileCommand}">
                        <ui:CommandBarButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource TrashCanOutline}" />
                        </ui:CommandBarButton.IconSource>
                    </ui:CommandBarButton>

                    <ui:CommandBarToggleButton Label="Always On Top" IsCheckedChanged="ToggleButtonOnIsCheckedChanged">
                        <ui:CommandBarToggleButton.IconSource>
                            <ui:PathIconSource Data="{StaticResource ArrowUpBoldBoxOutline}" />
                        </ui:CommandBarToggleButton.IconSource>
                    </ui:CommandBarToggleButton>

                    <ui:CommandBarButton Classes.start="{Binding !IsStarted}"
                                         Classes.stop="{Binding IsStarted}"
                                         Classes.running="{Binding StartProfilesCommand.IsRunning}">
                        <ui:CommandBarButton.Styles>
                            <Style Selector="ui|CommandBarButton.start">
                                <Setter Property="Label" Value="Start" />
                                <Setter Property="Command" Value="{Binding StartProfilesCommand}" />
                                <Setter Property="IconSource">
                                    <ui:PathIconSource Data="{StaticResource Play}" />
                                </Setter>
                            </Style>
                            <Style Selector="ui|CommandBarButton.stop">
                                <Setter Property="Label" Value="Stop" />
                                <Setter Property="Command" Value="{Binding StartProfilesCommand}" />
                                <Setter Property="IconSource">
                                    <ui:PathIconSource Data="{StaticResource Stop}" />
                                </Setter>
                            </Style>
                            <Style Selector="ui|CommandBarButton.running">
                                <Setter Property="Label" Value="Cancel" />
                                <Setter Property="Command" Value="{Binding StartProfilesCancelCommand}" />
                                <Setter Property="IconSource">
                                    <ui:PathIconSource Data="{StaticResource Cancel}" />
                                </Setter>
                            </Style>
                        </ui:CommandBarButton.Styles>
                    </ui:CommandBarButton>

                    <ui:CommandBarElementContainer>
                        <ui:ProgressRing IsVisible="{Binding StartProfilesCommand.IsRunning}"
                                         IsIndeterminate="{Binding StartProfilesCommand.IsRunning}"
                                         BorderThickness="5" />
                    </ui:CommandBarElementContainer>

                    <ui:CommandBarSeparator />

                    <ui:CommandBarElementContainer Margin="10 10 0 0">
                        <ComboBox ItemsSource="{Binding EventDataTypePreSelections}"
                                  SelectedItem="{Binding EventDataTypePreSelection}" />
                    </ui:CommandBarElementContainer>

                </ui:CommandBar.PrimaryCommands>
                <ui:CommandBar.SecondaryCommands>
                    <ui:CommandBarSeparator />
                    <!-- <ui:CommandBarButton IconSource="Cut" Label="Cut" /> -->
                </ui:CommandBar.SecondaryCommands>
            </ui:CommandBar>

            <ui:CommandBar>
                <ui:CommandBar.Styles>
                    <Style Selector="TextBlock">
                        <Setter Property="Margin" Value="10 0 10 0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </ui:CommandBar.Styles>
                <ui:CommandBar.PrimaryCommands>

                    <ui:CommandBarElementContainer>
                        <TextBlock Text="{Binding InputOutputDevice.DeviceName, FallbackValue='None'}" />
                    </ui:CommandBarElementContainer>

                    <ui:CommandBarSeparator />

                    <ui:CommandBarElementContainer
                        IsHitTestVisible="{Binding InputOutputDevice, Converter={x:Static ObjectConverters.IsNotNull}}"
                        PointerPressed="InputElementOnPointerPressed">
                        <TextBlock Text="{Binding ProfileCreatorModel.ProfileName, FallbackValue=''}" />
                        <FlyoutBase.AttachedFlyout>
                            <Flyout Placement="BottomEdgeAlignedLeft">
                                <TextBox Text="{Binding ProfileCreatorModel.Description, FallbackValue=''}"
                                         Watermark="Description"
                                         TextWrapping="Wrap"
                                         AcceptsTab="True"
                                         AcceptsReturn="True"
                                         Height="200"
                                         Width="400" />
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </ui:CommandBarElementContainer>

                </ui:CommandBar.PrimaryCommands>
            </ui:CommandBar>

            <ui:InfoBar IsOpen="{Binding InfoBarIsOpen, Mode=TwoWay}"
                        Severity="{Binding InfoBarSeverity}"
                        Message="{Binding InfoBarMessage}" />
        </StackPanel>

        <TabControl Grid.Row="1">
            <TabControl.Styles>
                <Style Selector="DataGrid">
                    <Setter Property="RowHeight" Value="50" />
                    <Setter Property="RowHeaderWidth" Value="24" />
                    <Setter Property="GridLinesVisibility" Value="All" />
                    <Setter Property="SelectionMode" Value="Extended" />
                    <Setter Property="BorderThickness" Value="5" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="HeadersVisibility" Value="All" />
                </Style>
                <Style Selector="DataGrid DataGridCell:current:focus /template/ Grid#FocusVisual">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
                <Style Selector="DataGrid DataGridCell:selected /template/ Grid#FocusVisual">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
                <Style Selector="DataGridRow:selected /template/ Rectangle#BackgroundRectangle">
                    <Setter Property="Fill" Value="#434343" />

                </Style>

                <!-- DataGrid DragAndDrop -->
                <Style Selector="DataGrid DataGridRow.DraggingUp">
                    <Setter Property="AdornerLayer.Adorner">
                        <Template>
                            <Border BorderThickness="0 2 0 0" BorderBrush="{DynamicResource SystemAccentColor}" />
                        </Template>
                    </Setter>
                </Style>
                <Style Selector="DataGrid DataGridRow.DraggingDown">
                    <Setter Property="AdornerLayer.Adorner">
                        <Template>
                            <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource SystemAccentColor}" />
                        </Template>
                    </Setter>
                </Style>
                <Style Selector="DataGrid DataGridRowHeader">
                    <Setter Property="AreSeparatorsVisible" Value="True" />
                    <Setter Property="(i:Interaction.Behaviors)">
                        <i:BehaviorCollectionTemplate>
                            <i:BehaviorCollection>
                                <b:ContextDragWithDirectionBehavior HorizontalDragThreshold="3"
                                                                    VerticalDragThreshold="3" />
                            </i:BehaviorCollection>
                        </i:BehaviorCollectionTemplate>
                    </Setter>
                    <Setter Property="ContextFlyout">
                        <ui:FAMenuFlyout Placement="Bottom" ShowMode="TransientWithDismissOnPointerMoveAway">
                            <ui:MenuFlyoutItem Text="Activate"
                                               Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).ActivateInputOutputCreatorCommand,
                                               FallbackValue={x:Null}}"
                                               CommandParameter="{Binding $parent[DataGrid].SelectedItems}">
                                <ui:MenuFlyoutItem.IconSource>
                                    <ui:PathIconSource Data="{StaticResource ToggleSwitchOutline}" />
                                </ui:MenuFlyoutItem.IconSource>
                            </ui:MenuFlyoutItem>
                            <ui:MenuFlyoutItem Text="Deactivate"
                                               Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).DeactivateInputOutputCreatorCommand,
                                               FallbackValue={x:Null}}"
                                               CommandParameter="{Binding $parent[DataGrid].SelectedItems}">
                                <ui:MenuFlyoutItem.IconSource>
                                    <ui:PathIconSource Data="{StaticResource ToggleSwitchOffOutline}" />
                                </ui:MenuFlyoutItem.IconSource>
                            </ui:MenuFlyoutItem>
                            <ui:MenuFlyoutItem Text="Duplicate"
                                               Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).DuplicateInputOutputCreatorRowCommand,
                                               FallbackValue={x:Null}}"
                                               CommandParameter="{Binding $parent[DataGrid].SelectedItems}">
                                <ui:MenuFlyoutItem.IconSource>
                                    <ui:PathIconSource Data="{StaticResource ContentDuplicate}" />
                                </ui:MenuFlyoutItem.IconSource>
                            </ui:MenuFlyoutItem>
                            <ui:MenuFlyoutItem Text="Delete"
                                               Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).DeleteInputOutputCreatorRowCommand,
                                               FallbackValue={x:Null}}"
                                               CommandParameter="{Binding $parent[DataGrid].SelectedItems}">
                                <ui:MenuFlyoutItem.IconSource>
                                    <ui:PathIconSource Data="{StaticResource TrashCanOutline}" />
                                </ui:MenuFlyoutItem.IconSource>
                            </ui:MenuFlyoutItem>
                        </ui:FAMenuFlyout>
                    </Setter>
                    <Setter Property="Content">
                        <Template>
                            <Viewbox>
                                <PathIcon Data="{StaticResource Drag}" />
                            </Viewbox>
                        </Template>
                    </Setter>
                </Style>

                <Style Selector="ToggleSwitch">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="OnContent" Value="" />
                    <Setter Property="OffContent" Value="" />
                    <Setter Property="Margin" Value="10 0 0 0" />
                </Style>
                <Style Selector="ToggleSwitch:checked /template/ Border#SwitchKnobBounds">
                    <Setter Property="Background" Value="LimeGreen" />
                </Style>
                <Style Selector="Button.b1">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="CornerRadius" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="Button.Add">
                    <Setter Property="Content" Value="Add" />
                    <Setter Property="Margin" Value="0 0 0 10" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="CornerRadius" Value="0" />
                    <Setter Property="IsEnabled" Value="{Binding !IsStarted}" />
                </Style>
                <Style Selector="Button.Edit:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="TextBlock.Background" Value="SteelBlue" />
                </Style>
                <Style
                    Selector="Button.Delete:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="TextBlock.Background" Value="Red" />
                </Style>
                <Style Selector="CheckBox">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="IsTabStop" Value="False" />
                </Style>
                <Style Selector="PathIcon">
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Width" Value="30" />
                </Style>
            </TabControl.Styles>

            <TabItem Header="Input">
                <TabItem.Content>
                    <Grid HorizontalAlignment="Left" RowDefinitions="*,Auto">
                        <DataGrid
                            ItemsSource="{Binding ProfileCreatorModel.InputCreators,
                            FallbackValue={x:Null}}">
                            <DataGrid.Styles>
                                <Style Selector="DataGridCell.Tip" x:DataType="m:InputCreator">
                                    <Setter Property="ToolTip.Tip"
                                            Value="{Binding Input,
                                            Converter={StaticResource NullableKeyValuePairConverter},
                                            ConverterParameter='Key'}" />
                                </Style>
                                <Style Selector="DataGrid">
                                    <Setter Property="(i:Interaction.Behaviors)">
                                        <i:BehaviorCollectionTemplate>
                                            <i:BehaviorCollection>
                                                <idd:ContextDropBehavior
                                                    Handler="{StaticResource InputCreatorDataGridDropHandler}" />
                                            </i:BehaviorCollection>
                                        </i:BehaviorCollectionTemplate>
                                    </Setter>
                                </Style>
                            </DataGrid.Styles>
                            <DataGrid.Columns>

                                <DataGridTemplateColumn Header="Active" SortMemberPath="IsActive">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleSwitch IsChecked="{Binding IsActive}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Edit">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Classes="b1 Edit"
                                                IsEnabled="{Binding !$parent.((vm:ProfileCreatorViewModel)DataContext).IsStarted,
                                                FallbackValue=False}"
                                                Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).EditInputCommand,
                                                FallbackValue={x:Null}}"
                                                CommandParameter="{Binding}">
                                                <PathIcon Data="{StaticResource PencilOutline}" />
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Delete">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Classes="b1 Delete"
                                                IsEnabled="{Binding !$parent.((vm:ProfileCreatorViewModel)DataContext).IsStarted,
                                                FallbackValue=False}"
                                                Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).DeleteInputOutputCreatorRowCommand,
                                                FallbackValue={x:Null}}"
                                                CommandParameter="{Binding}">
                                                <PathIcon Data="{StaticResource DeleteForeverOutline}" />
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn
                                    Header="Description"
                                    SortMemberPath="Description"
                                    Binding="{Binding Description}"
                                    MaxWidth="500" />

                                <DataGridTemplateColumn Header="Input Type"
                                                        SortMemberPath="InputType"
                                                        IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Classes.hasLogic="{Binding !!Preconditions.Length}"
                                                       Margin="12"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding InputType}">
                                                <TextBlock.Styles>
                                                    <Style Selector="TextBlock.hasLogic">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </Style>
                                                </TextBlock.Styles>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn
                                    Header="Input"
                                    SortMemberPath="Input.Position"
                                    Binding="{Binding Input.Position, FallbackValue=''}"
                                    IsReadOnly="True"
                                    CellStyleClasses="Tip" />

                                <DataGridTextColumn
                                    Header="Event Type"
                                    SortMemberPath="EventType"
                                    Binding="{Binding EventType}"
                                    IsReadOnly="True" />

                                <DataGridTextColumn
                                    Header="PMDG Event"
                                    SortMemberPath="PmdgEvent"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource PmdgEventToStringConverter}">
                                            <Binding Path="EventType" />
                                            <Binding Path="PmdgEvent" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Header="Event"
                                    SortMemberPath="Event"
                                    Binding="{Binding Event}"
                                    IsReadOnly="True" />

                                <DataGridTextColumn
                                    Header="Mouse Press"
                                    SortMemberPath="PmdgMousePress"
                                    Binding="{Binding PmdgMousePress}"
                                    IsReadOnly="True" />

                                <DataGridTextColumn
                                    Header="Mouse Release"
                                    SortMemberPath="PmdgMouseRelease"
                                    Binding="{Binding PmdgMouseRelease}"
                                    IsReadOnly="True" />

                                <DataGridTemplateColumn Header="Data Press" IsReadOnly="True"
                                                        SortMemberPath="DataPress">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="12" VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}{1}">
                                                        <Binding Path="DataPress" />
                                                        <Binding Path="DataPress2"
                                                                 StringFormat="{} │ {0}"
                                                                 TargetNullValue="" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Data Release" IsReadOnly="True"
                                                        SortMemberPath="DataRelease">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="12" VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}{1}">
                                                        <Binding Path="DataRelease" />
                                                        <Binding Path="DataRelease2"
                                                                 StringFormat="{} │ {0}"
                                                                 TargetNullValue="" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                        <Button Grid.Row="1"
                                Classes="Add"
                                Command="{Binding AddInputCommand}" />

                    </Grid>
                </TabItem.Content>
            </TabItem>

            <TabItem Header="Output"
                     IsSelected="True">
                <TabItem.Content>
                    <Grid HorizontalAlignment="Left" RowDefinitions="*,Auto">
                        <DataGrid
                            ItemsSource="{Binding ProfileCreatorModel.OutputCreators,
                            FallbackValue={x:Null}}">
                            <DataGrid.Styles>
                                <Style Selector="DataGrid">
                                    <Setter Property="(i:Interaction.Behaviors)">
                                        <i:BehaviorCollectionTemplate>
                                            <i:BehaviorCollection>
                                                <idd:ContextDropBehavior
                                                    Handler="{StaticResource OutputCreatorDataGridDropHandler}" />
                                            </i:BehaviorCollection>
                                        </i:BehaviorCollectionTemplate>
                                    </Setter>
                                </Style>
                            </DataGrid.Styles>
                            <DataGrid.Columns>

                                <DataGridTemplateColumn Header="Active" SortMemberPath="IsActive">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleSwitch IsChecked="{Binding IsActive}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Edit">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Classes="b1 Edit"
                                                IsEnabled="{Binding !$parent.((vm:ProfileCreatorViewModel)DataContext).IsStarted,
                                                FallbackValue=False}"
                                                Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).EditOutputCommand,
                                                FallbackValue={x:Null}}"
                                                CommandParameter="{Binding}">
                                                <PathIcon Data="{StaticResource PencilOutline}" />
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Delete">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Classes="b1 Delete"
                                                IsEnabled="{Binding !$parent.((vm:ProfileCreatorViewModel)DataContext).IsStarted,
                                                FallbackValue=False}"
                                                Command="{Binding $parent.((vm:ProfileCreatorViewModel)DataContext).DeleteInputOutputCreatorRowCommand,
                                                FallbackValue={x:Null}}"
                                                CommandParameter="{Binding}">
                                                <PathIcon Data="{StaticResource DeleteForeverOutline}" />
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn
                                    Header="Description"
                                    SortMemberPath="Description"
                                    Binding="{Binding Description}"
                                    MaxWidth="500" />

                                <DataGridTemplateColumn Header="Output Type"
                                                        SortMemberPath="OutputType"
                                                        IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Classes.hasLogic="{Binding !!Preconditions.Length}"
                                                       Margin="12"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding OutputType}">
                                                <TextBlock.Styles>
                                                    <Style Selector="TextBlock.hasLogic">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </Style>
                                                </TextBlock.Styles>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Output"
                                                        SortMemberPath="Output"
                                                        IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid
                                                Classes.showToolTip="{Binding !!Outputs.Length}"
                                                ToolTip.Placement="Bottom"
                                                ToolTip.VerticalOffset="0">
                                                <TextBlock
                                                    Classes.hasMultiple="{Binding Outputs.Length, FallbackValue=0 ,Converter={StaticResource LengthToBooleanConverter}}"
                                                    Margin="12"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding Outputs[0], FallbackValue=''}">
                                                    <TextBlock.Styles>
                                                        <Style Selector="TextBlock.hasMultiple">
                                                            <Setter Property="Foreground" Value="Red" />
                                                        </Style>
                                                    </TextBlock.Styles>
                                                </TextBlock>
                                                <ToolTip.Tip>
                                                    <ScrollViewer MaxHeight="200"
                                                                  Width="65">
                                                        <ui:ItemsRepeater ItemsSource="{Binding Outputs}">
                                                            <ui:ItemsRepeater.Layout>
                                                                <ui:StackLayout Orientation="Vertical" />
                                                            </ui:ItemsRepeater.Layout>
                                                        </ui:ItemsRepeater>
                                                    </ScrollViewer>
                                                </ToolTip.Tip>
                                                <Grid.Styles>
                                                    <Style Selector="Grid">
                                                        <Setter Property="Background" Value="{x:Null}" />
                                                    </Style>
                                                    <Style Selector="Grid.showToolTip">
                                                        <Setter Property="Background" Value="Transparent" />
                                                    </Style>
                                                </Grid.Styles>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn
                                    Header="Data Type"
                                    SortMemberPath="DataType"
                                    Binding="{Binding DataType}"
                                    IsReadOnly="True" />

                                <DataGridTemplateColumn Header="PMDG Data" IsReadOnly="True" SortMemberPath="PmdgData">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="12" VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} {1}">
                                                        <Binding Path="PmdgData" />
                                                        <Binding Path="PmdgDataArrayIndex"
                                                                 StringFormat="{}[{0}]"
                                                                 TargetNullValue="" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Data" IsReadOnly="True" SortMemberPath="Data">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="12" VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} {1}">
                                                        <Binding Path="Data" />
                                                        <Binding Path="Unit"
                                                                 StringFormat="{}[{0}]"
                                                                 TargetNullValue="" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn
                                    Header="Modifiers"
                                    Binding="{Binding Modifiers.Length, FallbackValue=''}"
                                    IsReadOnly="True" />

                                <DataGridTemplateColumn Header="Flight Sim Value" SortMemberPath="Value"
                                                        IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding FlightSimValue}"
                                                     IsVisible="{Binding FlightSimValue, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                     VerticalContentAlignment="Center"
                                                     Foreground="Red"
                                                     SelectionForegroundBrush="Red"
                                                     IsReadOnly="True"
                                                     BorderThickness="0"
                                                     Background="Transparent">
                                                <TextBox.Styles>
                                                    <Style
                                                        Selector="TextBox.valueIsNull /template/ DockPanel#PART_InnerDockPanel">
                                                        <Setter Property="Cursor" Value="Arrow" />
                                                    </Style>
                                                </TextBox.Styles>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Output Value" SortMemberPath="Value" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding OutputValue}"
                                                     IsVisible="{Binding OutputValue, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                     VerticalContentAlignment="Center"
                                                     Foreground="LimeGreen"
                                                     SelectionForegroundBrush="LimeGreen"
                                                     IsReadOnly="True"
                                                     BorderThickness="0"
                                                     Background="Transparent" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                        <Button Grid.Row="1"
                                Classes="Add"
                                Command="{Binding AddOutputCommand}" />
                    </Grid>
                </TabItem.Content>
            </TabItem>
        </TabControl>
    </Grid>


</UserControl>