<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:DeviceInterfaceManager.ViewModels"
             xmlns:converters="clr-namespace:DeviceInterfaceManager.Converters"
             xmlns:local="clr-namespace:DeviceInterfaceManager.Views"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             mc:Ignorable="d"
             d:DesignHeight="{StaticResource ContentDialogMaxHeight}"
             Width="{StaticResource ContentDialogMaxWidth}"
             x:Class="DeviceInterfaceManager.Views.OutputCreatorView"
             x:DataType="vm:OutputCreatorViewModel">

    <Design.DataContext>
        <vm:OutputCreatorViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:NullableKeyValuePairConverter x:Key="NullableKeyValuePairConverter" />
        <converters:DoubleToNullableByteConverter x:Key="DoubleToNullableByteConverter" />
    </UserControl.Resources>

    <Grid>
        <TabControl>
            <TabItem Header="Output">
                <StackPanel Margin="20" Spacing="25">
                    <StackPanel Spacing="25" Orientation="Horizontal" HorizontalAlignment="Center">
                        <RadioButton Content="SimVar / L:Var"
                                     IsChecked="{Binding IsMsfsSimConnect}" />
                        <RadioButton Content="PMDG 737"
                                     IsChecked="{Binding IsPmdg737}" />
                    </StackPanel>

                    <!-- Output Type -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Output Type" />
                        <ComboBox Grid.Column="1"
                                  HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding OutputType}"
                                  ItemsSource="{Binding OutputTypes}" />
                    </Grid>

                    <!-- Output -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Output" />
                        <Grid Grid.Column="1">
                            <ComboBox Name="OutputComboBox"
                                      HorizontalAlignment="Stretch"
                                      SelectedItem="{Binding Output}"
                                      ItemsSource="{Binding Components}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Name="PositionTextBlock" Text="{Binding Position}"
                                                   Background="Transparent">
                                            <i:Interaction.Behaviors>
                                                <ia:EventTriggerBehavior EventName="PointerEntered">
                                                    <ia:InvokeCommandAction
                                                        Command="{Binding  $parent[ComboBox].((vm:OutputCreatorViewModel)DataContext).PointerEnteredComboBoxCommand,
                                                    FallbackValue={x:Null}}"
                                                        CommandParameter="{Binding #PositionTextBlock.Text }" />
                                                </ia:EventTriggerBehavior>
                                                <ia:EventTriggerBehavior EventName="PointerExited">
                                                    <ia:InvokeCommandAction
                                                        Command="{Binding $parent[ComboBox].((vm:OutputCreatorViewModel)DataContext).PointerExitedComboBoxCommand,
                                                    FallbackValue={x:Null}}"
                                                        CommandParameter="{Binding #PositionTextBlock.Text}" />
                                                </ia:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Button Classes="clear"
                                    Command="{Binding #OutputComboBox.Clear}"
                                    IsVisible="{Binding #OutputComboBox.SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        </Grid>
                    </Grid>

                    <!-- PMDG Data -->
                    <Grid ColumnDefinitions="*,2*"
                          IsVisible="{Binding IsPmdg737}">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="PMDG Data" />
                        <AutoCompleteBox Grid.Column="1"
                                         HorizontalAlignment="Stretch"
                                         Watermark="Search..."
                                         FilterMode="ContainsOrdinal"
                                         SelectedItem="{Binding PmdgData}"
                                         ItemsSource="{Binding PmdgDataEnumerable}"
                                         Text="{Binding SearchPmdgData}"
                                         Classes="clearButton rightEdgeAlignedBottomPopup"
                                         Classes.selected="{Binding PmdgData, Converter={x:Static ObjectConverters.IsNotNull}}">
                            <AutoCompleteBox.Styles>
                                <Style Selector="AutoCompleteBox.selected">
                                    <Style Selector="^ /template/ TextBox#PART_TextBox">
                                        <Setter Property="Foreground" Value="LimeGreen" />
                                    </Style>
                                </Style>
                            </AutoCompleteBox.Styles>
                        </AutoCompleteBox>
                    </Grid>

                    <!-- PMDG Array Index -->
                    <Grid ColumnDefinitions="*,2*"
                          IsVisible="{Binding IsPmdg737}"
                          IsEnabled="{Binding PmdgDataArrayIndex, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="PMDG Index" />
                        <ComboBox Grid.Column="1"
                                  HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding PmdgDataArrayIndex}"
                                  ItemsSource="{Binding PmdgDataArrayIndices}" />
                    </Grid>

                    <!-- MSFS Data -->
                    <Grid ColumnDefinitions="*,2*"
                          IsVisible="{Binding IsMsfsSimConnect}">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Data" />
                        <TextBox Grid.Column="1"
                                 Classes="clearButton"
                                 HorizontalAlignment="Stretch"
                                 TextWrapping="Wrap"
                                 Watermark="SimVar / L:Var"
                                 Text="{Binding Data}" />
                    </Grid>

                    <!-- MSFS Unit -->
                    <Grid ColumnDefinitions="*,2*"
                          IsVisible="{Binding IsMsfsSimConnect}">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Unit" />
                        <TextBox Grid.Column="1"
                                 Classes="clearButton"
                                 HorizontalAlignment="Stretch"
                                 Watermark="Unit"
                                 Text="{Binding Unit}" />
                    </Grid>

                    <!-- Invert -->
                    <Grid ColumnDefinitions="*,2*"
                          IsVisible="{Binding IsComparisonEnabled}">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Invert" />
                        <CheckBox Grid.Column="1"
                                  Margin="0 0 0 5"
                                  IsChecked="{Binding IsInverted}" />
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Header="Comparison"
                     IsVisible="{Binding !IsDisplay}">
                <StackPanel Margin="20" Spacing="25" Width="400">
                    <!-- Operator -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Operator" />
                        <Grid Grid.Column="1">
                            <ComboBox HorizontalAlignment="Stretch"
                                      SelectedItem="{Binding Operator}"
                                      ItemsSource="{Binding Operators}" />
                            <Button Classes="clear"
                                    Command="{Binding ClearOperatorCommand}"
                                    IsVisible="{Binding Operator, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        </Grid>
                    </Grid>

                    <!-- Comparison Value -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Comparison Value" />
                        <TextBox Grid.Column="1"
                                 Classes="clearButton"
                                 HorizontalAlignment="Stretch"
                                 Watermark="Comparison Value"
                                 Text="{Binding ComparisonValue}" />
                    </Grid>

                    <!-- True Value -->
                    <Grid ColumnDefinitions="*,2*" IsEnabled="False">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="True Value" />
                        <TextBox Grid.Column="1"
                                 Classes="clearButton"
                                 HorizontalAlignment="Stretch"
                                 Watermark="True Value"
                                 Text="{Binding TrueValue}" />
                    </Grid>

                    <!-- False Value -->
                    <Grid ColumnDefinitions="*,2*" IsEnabled="False">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="False Value" />
                        <TextBox Grid.Column="1"
                                 Classes="clearButton"
                                 HorizontalAlignment="Stretch"
                                 Watermark="False Value"
                                 Text="{Binding FalseValue}" />
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Header="Display"
                     IsVisible="{Binding IsDisplay}">
                <StackPanel Margin="20" Spacing="25" Width="400">
                    
                    <!-- Numeric Format -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Numeric Format" />
                        <TextBox Grid.Column="1"
                                 Classes="clearButton"
                                 HorizontalAlignment="Stretch"
                                 Watermark="Numeric Format"
                                 Text="{Binding NumericFormat}" />
                    </Grid>

                    <!-- Left Padding -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Left Padding" />
                        <CheckBox Grid.Column="1"
                                  Margin="0 0 0 5"
                                  IsChecked="{Binding IsPadded}" />
                    </Grid>

                    <!-- Padding Character -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Padding Character" />
                        <Grid Grid.Column="1">
                            <ComboBox HorizontalAlignment="Stretch"
                                      DisplayMemberBinding="{Binding 
                                  Converter={StaticResource NullableKeyValuePairConverter},
                                  ConverterParameter='Key'}"
                                      SelectedItem="{Binding PaddingCharacterPair}"
                                      ItemsSource="{Binding PaddingCharacters}" />
                            <Button Classes="clear"
                                    Command="{Binding ClearPaddingCharacterCommand}"
                                    IsVisible="{Binding PaddingCharacter, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        </Grid>
                    </Grid>

                    <!-- Digit Count -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Digit Count" />
                        <Grid Grid.Column="1">
                        <ComboBox HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding DigitCount}"
                                  ItemsSource="{Binding DigitCounts}" />
                        <Button Classes="clear"
                                Command="{Binding ClearDigitCountCommand}"
                                IsVisible="{Binding DigitCount, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        </Grid>
                    </Grid>

                    <!-- Digit & Decimal Point -->
                    <Grid ColumnDefinitions="*,2*" RowDefinitions="*,*"
                          IsVisible="{Binding DigitCount, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   VerticalAlignment="Top"
                                   Margin="0 7 0 0"
                                   Text="Digit" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Margin="0 10 0 0"
                                   Text="Decimal Point" />
                        <ItemsControl Grid.Row="0"
                                      Grid.Column="1"
                                      Grid.RowSpan="2"
                                      ItemsSource="{Binding Digits}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Spacing="15" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                        <CheckBox IsChecked="{Binding IsDigitChecked}" />
                                        <TextBlock Text="{Binding Digit}" HorizontalAlignment="Center" />
                                        <CheckBox IsChecked="{Binding IsDecimalPointChecked}" />
                                        <StackPanel.Styles>
                                            <Style Selector="Grid">
                                                <Setter Property="Width" Value="20" />
                                            </Style>
                                        </StackPanel.Styles>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>

                    <!-- Substring Start -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Substring Start" />
                        <ui:NumberBox Grid.Column="1"
                                      HorizontalAlignment="Stretch"
                                      PlaceholderText="Number 0 - 255"
                                      Minimum="0"
                                      Maximum="255"
                                      SpinButtonPlacementMode="Inline"
                                      Value="{Binding SubstringStart,
                                      Converter={StaticResource DoubleToNullableByteConverter}}" />
                    </Grid>

                    <!-- Substring End -->
                    <Grid ColumnDefinitions="*,2*">
                        <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="Substring End" />
                        <ui:NumberBox Grid.Column="1"
                                      HorizontalAlignment="Stretch"
                                      PlaceholderText="Number 0 - 255"
                                      Minimum="0"
                                      Maximum="255"
                                      SpinButtonPlacementMode="Inline"
                                      Value="{Binding SubstringEnd,
                                      Converter={StaticResource DoubleToNullableByteConverter}}" />
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Header="Precondition">
                <local:PreconditionView />
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>